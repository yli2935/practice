{"ast":null,"code":"var _jsxFileName = \"/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/components/Markdown.js\";\n/*\n * @Author: Li yli2935@uwo.ca\n * @Date: 2023-06-09 11:43:52\n * @LastEditors: Li yli2935@uwo.ca\n * @LastEditTime: 2023-06-24 16:37:25\n * @FilePath: /practie/practice/src/modules/components/Markdown.js\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n */\nimport * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4'\n      }\n    },\n    h2: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h6'\n      }\n    },\n    h3: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'subtitle1'\n      }\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true\n      }\n    },\n    p: {\n      component: Typography,\n      props: {\n        paragraph: true\n      }\n    },\n    a: {\n      component: Link\n    },\n    li: {\n      component: props => /*#__PURE__*/_jsxDEV(Box, {\n        component: \"li\",\n        sx: {\n          mt: 1\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }\n  }\n};\nconst CodeBlock = _ref => {\n  let {\n    className,\n    children\n  } = _ref;\n  let lang = 'text'; // default monospaced text\n  if (className && className.startsWith('lang-')) {\n    lang = className.replace('lang-', '');\n  }\n  return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n    language: lang,\n    style: CodeStyle,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n// markdown-to-jsx uses <pre><code/></pre> for code blocks.\n_c = CodeBlock;\nconst PreBlock = _ref2 => {\n  let {\n    children,\n    ...rest\n  } = _ref2;\n  if ('type' in children && children['type'] === 'code') {\n    return CodeBlock(children['props']);\n  }\n  return /*#__PURE__*/_jsxDEV(\"pre\", {\n    ...rest,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n};\n_c2 = PreBlock;\nexport default function Markdown(props) {\n  return /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n    options: options,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n}\n_c3 = Markdown;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CodeBlock\");\n$RefreshReg$(_c2, \"PreBlock\");\n$RefreshReg$(_c3, \"Markdown\");","map":{"version":3,"names":["React","ReactMarkdown","Box","Typography","Link","jsxDEV","_jsxDEV","options","overrides","h1","component","props","gutterBottom","variant","h2","h3","h4","paragraph","p","a","li","sx","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","CodeBlock","_ref","className","lang","startsWith","replace","SyntaxHighlighter","language","style","CodeStyle","_c","PreBlock","_ref2","rest","_c2","Markdown","_c3","$RefreshReg$"],"sources":["/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/components/Markdown.js"],"sourcesContent":["/*\n * @Author: Li yli2935@uwo.ca\n * @Date: 2023-06-09 11:43:52\n * @LastEditors: Li yli2935@uwo.ca\n * @LastEditTime: 2023-06-24 16:37:25\n * @FilePath: /practie/practice/src/modules/components/Markdown.js\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\n */\nimport * as React from 'react';\nimport ReactMarkdown from 'markdown-to-jsx';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\n\nconst options = {\n  overrides: {\n    h1: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'h4',\n      },\n    },\n    h2: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'h6' },\n    },\n    h3: {\n      component: Typography,\n      props: { gutterBottom: true, variant: 'subtitle1' },\n    },\n    h4: {\n      component: Typography,\n      props: {\n        gutterBottom: true,\n        variant: 'caption',\n        paragraph: true,\n      },\n    },\n    p: {\n      component: Typography,\n      props: { paragraph: true },\n    },\n    a: { component: Link },\n    li: {\n      component: (props) => (\n        <Box component=\"li\" sx={{ mt: 1 }}>\n          <Typography component=\"span\" {...props} />\n        </Box>\n      ),\n    },\n  },\n};\n\nconst CodeBlock = ({className, children}) => {\n  let lang = 'text'; // default monospaced text\n  if (className && className.startsWith('lang-')) {\n    lang = className.replace('lang-', '');\n  }\n  return (\n    <SyntaxHighlighter language={lang} style={CodeStyle}>\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n\n// markdown-to-jsx uses <pre><code/></pre> for code blocks.\nconst PreBlock = ({children, ...rest}) => {\n  if ('type' in children && children ['type'] === 'code') {\n    return CodeBlock(children['props']);\n  }\n  return <pre {...rest}>{children}</pre>;\n};\n\nexport default function Markdown(props) {\n\n  return <ReactMarkdown options={options} {...props} />;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}