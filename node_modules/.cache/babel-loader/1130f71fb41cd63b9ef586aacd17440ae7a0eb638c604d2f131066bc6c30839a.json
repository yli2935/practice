{"ast":null,"code":"var _jsxFileName = \"/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/components/AnimateButton.js\";\nimport PropTypes from 'prop-types';\n\n// third-party\nimport { motion } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AnimateButton(_ref) {\n  let {\n    children,\n    type\n  } = _ref;\n  switch (type) {\n    case 'rotate': // only available in paid version\n    case 'slide': // only available in paid version\n    case 'scale': // only available in paid version\n    default:\n      return /*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1\n        },\n        whileTap: {\n          scale: 0.9\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n  }\n}\n_c = AnimateButton;\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate'])\n};\nAnimateButton.defaultProps = {\n  type: 'scale'\n};\nvar _c;\n$RefreshReg$(_c, \"AnimateButton\");","map":{"version":3,"names":["PropTypes","motion","jsxDEV","_jsxDEV","AnimateButton","_ref","children","type","div","whileHover","scale","whileTap","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","node","oneOf","defaultProps","$RefreshReg$"],"sources":["/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/components/AnimateButton.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// third-party\nimport { motion } from 'framer-motion';\n\n// ==============================|| ANIMATION BUTTON ||============================== //\n\nexport default function AnimateButton({ children, type }) {\n  switch (type) {\n    case 'rotate': // only available in paid version\n    case 'slide': // only available in paid version\n    case 'scale': // only available in paid version\n    default:\n      return (\n        <motion.div whileHover={{ scale: 1 }} whileTap={{ scale: 0.9 }}>\n          {children}\n        </motion.div>\n      );\n  }\n}\n\nAnimateButton.propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.oneOf(['slide', 'scale', 'rotate'])\n};\n\nAnimateButton.defaultProps = {\n  type: 'scale'\n};\n"],"mappings":";AAAA,OAAOA,SAAS,MAAM,YAAY;;AAElC;AACA,SAASC,MAAM,QAAQ,eAAe;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACtD,QAAQE,IAAI;IACV,KAAK,QAAQ,CAAC,CAAC;IACf,KAAK,OAAO,CAAC,CAAC;IACd,KAAK,OAAO,CAAC,CAAC;IACd;MACE,oBACEJ,OAAA,CAACF,MAAM,CAACO,GAAG;QAACC,UAAU,EAAE;UAAEC,KAAK,EAAE;QAAE,CAAE;QAACC,QAAQ,EAAE;UAAED,KAAK,EAAE;QAAI,CAAE;QAAAJ,QAAA,EAC5DA;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;EAEnB;AACF;AAACC,EAAA,GAZuBZ,aAAa;AAcrCA,aAAa,CAACa,SAAS,GAAG;EACxBX,QAAQ,EAAEN,SAAS,CAACkB,IAAI;EACxBX,IAAI,EAAEP,SAAS,CAACmB,KAAK,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,CAAC;AACpD,CAAC;AAEDf,aAAa,CAACgB,YAAY,GAAG;EAC3Bb,IAAI,EAAE;AACR,CAAC;AAAC,IAAAS,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}