{"ast":null,"code":"var _jsxFileName = \"/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/views/Drawer/index.js\",\n  _s = $RefreshSig$();\nimport PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Drawer, useMediaQuery } from '@mui/material';\n\n// project import\nimport DrawerHeader from './DrawerHeader';\nimport DrawerContent from './DrawerContent';\nimport MiniDrawerStyled from './MiniDrawerStyled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDrawer = _ref => {\n  _s();\n  let {\n    open,\n    handleDrawerToggle,\n    window\n  } = _ref;\n  const theme = useTheme();\n  const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n  const drawerWidth = 260;\n  // responsive drawer container\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  // header content\n  const drawerContent = useMemo(() => /*#__PURE__*/_jsxDEV(DrawerContent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 41\n  }, this), []);\n  const drawerHeader = useMemo(() => /*#__PURE__*/_jsxDEV(DrawerHeader, {\n    open: open\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 40\n  }, this), [open]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"nav\",\n    sx: {\n      flexShrink: {\n        md: 0\n      },\n      zIndex: 1300\n    },\n    \"aria-label\": \"mailbox folders\",\n    children: !matchDownMD ? /*#__PURE__*/_jsxDEV(MiniDrawerStyled, {\n      variant: \"permanent\",\n      open: open,\n      children: [drawerHeader, drawerContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Drawer, {\n      container: container,\n      variant: \"temporary\",\n      open: open,\n      onClose: handleDrawerToggle,\n      ModalProps: {\n        keepMounted: true\n      },\n      sx: {\n        display: {\n          xs: 'block',\n          lg: 'none'\n        },\n        '& .MuiDrawer-paper': {\n          boxSizing: 'border-box',\n          width: drawerWidth,\n          borderRight: `1px solid ${theme.palette.divider}`,\n          backgroundImage: 'none',\n          boxShadow: 'inherit'\n        }\n      },\n      children: [open && drawerHeader, open && drawerContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this);\n};\n_s(MainDrawer, \"M9mEggiGHw7W9KxSJkcZsziVIyE=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = MainDrawer;\nMainDrawer.propTypes = {\n  open: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  window: PropTypes.object\n};\nexport default MainDrawer;\nvar _c;\n$RefreshReg$(_c, \"MainDrawer\");","map":{"version":3,"names":["PropTypes","useMemo","useTheme","Box","Drawer","useMediaQuery","DrawerHeader","DrawerContent","MiniDrawerStyled","jsxDEV","_jsxDEV","MainDrawer","_ref","_s","open","handleDrawerToggle","window","theme","matchDownMD","breakpoints","down","drawerWidth","container","undefined","document","body","drawerContent","fileName","_jsxFileName","lineNumber","columnNumber","drawerHeader","component","sx","flexShrink","md","zIndex","children","variant","onClose","ModalProps","keepMounted","display","xs","lg","boxSizing","width","borderRight","palette","divider","backgroundImage","boxShadow","_c","propTypes","bool","func","object","$RefreshReg$"],"sources":["/Users/liyaguang/udemy/Reacl Learning/practie/practice/src/modules/views/Drawer/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useMemo } from 'react';\n\n// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box, Drawer, useMediaQuery } from '@mui/material';\n\n// project import\nimport DrawerHeader from './DrawerHeader';\nimport DrawerContent from './DrawerContent';\nimport MiniDrawerStyled from './MiniDrawerStyled';\n\n\nconst MainDrawer = ({ open, handleDrawerToggle, window }) => {\n    const theme = useTheme();\n    const matchDownMD = useMediaQuery(theme.breakpoints.down('lg'));\n    const drawerWidth = 260\n    // responsive drawer container\n    const container = window !== undefined ? () => window().document.body : undefined;\n  \n    // header content\n    const drawerContent = useMemo(() => <DrawerContent />, []);\n    const drawerHeader = useMemo(() => <DrawerHeader open={open} />, [open]);\n  \n    return (\n      <Box component=\"nav\" sx={{ flexShrink: { md: 0 }, zIndex: 1300 }} aria-label=\"mailbox folders\">\n        {!matchDownMD ? (\n          <MiniDrawerStyled variant=\"permanent\" open={open}>\n            {drawerHeader}\n            {drawerContent}\n          </MiniDrawerStyled>\n        ) : (\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            open={open}\n            onClose={handleDrawerToggle}\n            ModalProps={{ keepMounted: true }}\n            sx={{\n              display: { xs: 'block', lg: 'none' },\n              '& .MuiDrawer-paper': {\n                boxSizing: 'border-box',\n                width: drawerWidth,\n                borderRight: `1px solid ${theme.palette.divider}`,\n                backgroundImage: 'none',\n                boxShadow: 'inherit'\n              }\n            }}\n          >\n            {open && drawerHeader}\n            {open && drawerContent}\n          </Drawer>\n        )}\n      </Box>\n    );\n  };\n  \n  MainDrawer.propTypes = {\n    open: PropTypes.bool,\n    handleDrawerToggle: PropTypes.func,\n    window: PropTypes.object\n  };\n  \n  export default MainDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}